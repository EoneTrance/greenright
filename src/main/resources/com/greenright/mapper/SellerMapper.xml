<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.greenright.dao.SellerDao">
  <resultMap type="Seller" id="SellerMap">
    <id column="member_id" property="no"/>
    <result column="account_num" property="accountNum"/>
    <result column="account_holder" property="accountHolder"/>
    <result column="bank_name" property="bankName"/>
  </resultMap>
  
  <sql id="selectSeller">
    select
      bank_name,
      account_num,
      account_holder,
      tel,
      point
  </sql>
  
  <sql id="whereSeller">
    where member_id=#{no}
  </sql> 
 
  <insert id="insert" parameterType="Seller">
    insert into
    sellers(
      member_id,
      bank_name,
      account_num,
      account_holder,
      tel,
      point)
    values(
      #{no},
      #{bankName},
      #{accountNum},
      #{accountHolder},
      #{tel},
      #{point})
  </insert>
  
  <select id="findBy" parameterType="int" resultMap="SellerMap">
    <include refid="selectSeller"/>
      from sellers
    <include refid="whereSeller"/>
  </select>
  
  <select id="findTel" parameterType="string" resultMap="SellerMap">
     select member_id, tel
     from sellers  where tel=#{tel}
  </select>
  
  <select id="findAccount" parameterType="string" resultMap="SellerMap">
     select member_id, account_num
     from sellers where account_num=#{accountNum}
  </select>
  
  <select id="findInfoAll" parameterType="seller" resultMap="SellerMap">
    select *
    from sellers
    where member_id=#{id} and tel=#{tel}
  </select>
  
  <select id="findAll" parameterType="string" resultMap="SellerMap">
    <include refid="selectSeller"/>
    from sellers
    <if test="_parameter != null and _parameter != ''">
    <bind name="bindValue" value="'%' + _parameter + '%'"/>
      where
      member_id like #{bindValue} or
      bank_name like #{bindValue} or
      account_num like #{bindValue} or
      account_holder like #{bindValue} or
      tel like #{bindValue}
    </if>
    order by seller_id desc
  </select>
  
  <update id="update" parameterType="Seller">
    update sellers
    <set>
      <if test="bankName != null">bank_name=#{bankName}</if>
      <if test="accountNum != null">,account_num=#{accountNum}</if>
      <if test="accountHolder != null">,account_holder=#{accountHolder}</if>
      <if test="tel != null">,tel=#{tel}</if>
    </set>
    <include refid="whereSeller"></include>
  </update>
  
<!--

  <update id="update" parameterType="Seller">
    update sellers
    <set>
      <if test="cellPhone != null">cell_phone=#{cellPhone}</if>
      <if test="nickname != null">,nickname=#{nickname}</if>
      <if test="email != null">,email=#{email}</if>
      <if test="postalCode != null">,postal_code=#{postalCode}</if>
      <if test="defaultAddress != null">,default_address=#{defaultAddress}</if>
      <if test="detailAddress != null">,detail_address=#{detailAddress}</if>
      <if test="question != null">,question=#{question}</if>
      <if test="answer != null">,answer=#{answer}</if>
    </set>
    <include refid="whereSeller"></include>
  </update>
  
  <select id="findByKeyword" parameterType="string" resultMap="SellerMap">
    <bind name="bindValue" value="'%' + _parameter + '%'"/>
    <include refid="selectSeller"/>
    from
      sellers
    where
      id like #{bindValue} or
      email like #{bindValue} or
      name like #{bindValue} or
      cell_phone like #{bindValue}
    order by seller_id desc
  </select> 
-->
  
<!--   
  
  <select id="findBy" parameterType="int" resultMap="SellerMap">
    <include refid="selectSeller"/>,
    certification_flag,
    cell_phone,
    nickname,
    postal_code,
    default_address,
    detail_address,
    question,
    answer
    from sellers
    <include refid="whereSeller"/>
  </select>
  
  
  <delete id="delete">
    delete from sellers
    <include refid="whereSeller"/>
  </delete>
   -->
</mapper>