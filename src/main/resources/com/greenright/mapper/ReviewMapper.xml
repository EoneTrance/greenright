<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.greenright.dao.ReviewDao">

	<!-- 컬럼 이름과 자바 객체의 프로퍼티 이름을 연결한다. -->
	<resultMap type="Review" id="ReviewMap">
		<id column="review_id" property="no" />
		<result column="product_id" property="productNo" />
		<result column="member_id" property="memberNo" />
		<result column="created_date" property="createdDate" />
		<result column="rating" property="rating" />
		<result column="title" property="title" />
		<result column="contents" property="contents"></result>
	

	<association property="member" javaType="Member">
		<id column="member_id" property="no" />
		<result column="registered_date" property="registeredDate" />
		<result column="id" property="id" />
		<result column="password" property="password" />
		<result column="certification_flag" property="certification" />
		<result column="cell_phone" property="cellPhone" />
		<result column="tel" property="tel" />
		<result column="nickname" property="nickname" />
		<result column="name" property="name" />
		<result column="email" property="email" />
		<result column="postal_code" property="postalCode" />
		<result column="default_address" property="defaultAddress" />
		<result column="detail_address" property="detailAddress" />
		<result column="question" property="question" />
		<result column="answer" property="answer" />
		<result column="auth_key" property="authkey"/>
		<result column="password_authkey" property="passwordAuthkey"/>
</association>

<collection property="photos" javaType="ReviewPhoto">
  <id column ="review_photo_id" property="no"/>
  <result column="review_id" property="reviewNo"/>
  <result column="photo_path" property="photoPath"/>
</collection>

<collection property="replys" javaType="ReviewReply">
  <id column ="review_reply_id" property="no"/>
  <result column="review_id" property="reivewNo"/>
  <result column="member_id" property="memberNo"/>
  <result column ="created_date" property="createdDate"/>
  <result column="contents" property="contents"/>
</collection>

	</resultMap>
	<select id="findBy" resultMap="ReviewMap" parameterType="int">
  select
  r.review_id,
  r.title,
  r.product_id,
  r.review_id,
  r.contents,
  r.rating,
  r.created_date,
  m.id
  from reviews r
  LEFT OUTER JOIN members m ON m.member_id = r.member_id 
  where review_id = #{no}
	</select>

  <select id="findAll" resultMap="ReviewMap" parameterType="int" >
  select
  r.review_id,
  r.title,
  r.product_id,
  r.review_id,
  r.contents,
  r.rating,
  r.created_date,
  m.id,
  p.photo_path
  from reviews r
  left outer join members m on m.member_id = r.member_id
  left outer join review_photos p on r.review_id = p.review_id
  where product_id =#{no}
  </select>

	<insert id="insertReview" parameterType="Review"
	        useGeneratedKeys="true"
          keyColumn="review_id"
          keyProperty="no">
		insert into reviews(product_id, member_id,created_date,rating,title,contents)
		values(#{productNo}, #{memberNo},now(),#{rating},#{title},#{contents})
	</insert>
<select id="checkReview" parameterType="Review" resultType="int">
  select count(*) from reviews where member_id =#{memberNo} and product_id =#{productNo}
</select>
<select id="getRatingAver" parameterType= "int" resultType="int">
SELECT AVG(rating)
FROM reviews
WHERE product_id = #{no}
</select>

</mapper>