<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.greenright.dao.CommentDao">

	<!-- 컬럼 이름과 자바 객체의 프로퍼티 이름을 연결한다. -->
	<resultMap type="Comment" id="CommentMap">
		<id column="comments_id" property="no" />
		<result column="member_id" property="memberNo" />
		<result column="boards_id" property="boardNo" />
		<result column="created_date" property="createdDate" />
		<result column="contents" property="contents" />
		<result column="id" property="id" />
	</resultMap>
	

	<resultMap type="Member" id="MemberMap">
		<id column="member_id" property="no" />
		<result column="registered_date" property="registeredDate" />
		<result column="id" property="id" />
		<result column="password" property="password" />
		<result column="certification_flag" property="certification" />
		<result column="cell_phone" property="cellPhone" />
		<result column="tel" property="tel" />
		<result column="nickname" property="nickname" />
		<result column="name" property="name" />
		<result column="email" property="email" />
		<result column="postal_code" property="postalCode" />
		<result column="default_address" property="defaultAddress" />
		<result column="detail_address" property="detailAddress" />
		<result column="question" property="question" />
		<result column="answer" property="answer" />
		<result column="auth_key" property="authkey"/>
		<result column="password_authkey" property="passwordAuthkey"/>
	</resultMap>

	<sql id="sql1">
		select
		comments_id,
		member_id,
		boards_id,
		created_date,
		contents
	</sql>
	
  <update id="update" parameterType="map">
    update comments set
    contents=#{contents}
    where comments_id=#{commentNo}
  </update>


	<select id="findAll" resultMap="CommentMap" parameterType= "int">
    select
	    c.comments_id,
	    c.member_id,
	    c.boards_id,
	    c.created_date,
	    c.contents,
	    m.id
	  from comments c 
	   left outer join members m on c.member_id=m.member_id 
	   where boards_id = #{boardNo}
	   order by c.comments_id desc
	   

	    
	</select>

	<insert id="insert" parameterType="Comment"
	        useGeneratedKeys="true"
          keyColumn="comments_id"
          keyProperty="no">
		insert into comments(boards_id, member_id, contents,created_date)
		values(#{boardNo}, #{memberNo}, #{contents}, now())
	</insert>

	<delete id="delete" parameterType="int">
		delete from comments
		where comments_id=#{no}
	</delete>

</mapper>