<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.greenright.dao.PrivateBoardDao">

  <resultMap type="PrivateBoard" id="PrivateBoardMap">
    <id column="private_question_id" property="no"/>
    <result column="questIon_type" property="type"/>
    <result column="member_id" property="memberNo"/>
    <result column="created_date" property="date"/>
    <result column="title" property="title"/>
    <result column="contents" property="contents"/>
    <result column="answer_tf" property="answerTrueFalse"/>
    <result column="answers" property="answers"/>
    <result column="id" property="id" />
  </resultMap>
  
  <resultMap type="Member" id="MemberMap">
    <id column="member_id" property="no" />
    <result column="registered_date" property="registeredDate" />
    <result column="id" property="id" />
    <result column="password" property="password" />
    <result column="certification_flag" property="certification" />
    <result column="cell_phone" property="cellPhone" />
    <result column="tel" property="tel" />
    <result column="nickname" property="nickname" />
    <result column="name" property="name" />
    <result column="email" property="email" />
    <result column="postal_code" property="postalCode" />
    <result column="default_address" property="defaultAddress" />
    <result column="detail_address" property="detailAddress" />
    <result column="question" property="question" />
    <result column="answer" property="answer" />
    <result column="auth_key" property="authkey"/>
    <result column="password_authkey" property="passwordAuthkey"/>
  </resultMap>
  
  <resultMap type="PrivateBoardAnswers" id="PrivateBoardAnswersMap">
    <id column="private_question_id" property="privateQuestion"/>
    <result column="created_date" property="createdDate"/>
    <result column="answers" property="contents"/>
  </resultMap>
  
  

  <sql id="basicColumn">
  select 
    private_question_id,
    questIon_type,
    member_id,
    created_date,
    title,
    contents,
    answer_tf
    
  </sql>

  <sql id="where">
    where member_id=#{no}
  </sql>
  
  <select id="findBy" parameterType="int" resultMap="PrivateBoardMap">
   select 
    p.private_question_id,
    p.questIon_type,
    p.member_id,
    p.created_date,
    p.title,
    p.contents,
    p.answer_tf,
    a.answers
    from private_questions p
      left outer join private_answers a on p.private_question_id=a.private_question_id
    where p.private_question_id=#{no}
  </select>
  
 <!--  <select id="findBy" parameterType="int" resultMap="PrivateBoardMap">
    <include refid="basicColumn"/>
    from private_questions
    where private_question_id=#{no}
  </select> -->
  
    <insert id="insert" parameterType="PrivateBoard">
    INSERT INTO private_questions (
      questIon_type
      , member_id
      , created_date
      , title
      , contents)
      VALUES (
      #{type}
      , #{memberNo}
      , curdate()
      , #{title}
      , #{contents}
 );
  </insert>
  
  <select id="findAll" parameterType="map" resultMap="PrivateBoardMap">
    select 
       p.private_question_id,
       p.questIon_type,
       p.member_id,
       p.created_date,
       p.title,
       p.contents,
       p.answer_tf,
       m.id
    from private_questions p
      left outer join members m on p.member_id=m.member_id
     where p.member_id=#{memberNo}
      <if test="questionType != null and questionType != 'default'"> and questIon_type like #{questionType}</if>
      <if test="answerTF != null and answerTF != 'default'"> and answer_tf like #{answerTF}</if>
    order by private_question_id asc 
    limit #{offset}, #{pageSize}
  </select>
  
    <select id="managerFindAll" parameterType="map" resultMap="PrivateBoardMap">
    select 
       p.private_question_id,
       p.questIon_type,
       p.member_id,
       p.created_date,
       p.title,
       p.contents,
       p.answer_tf,
       m.id
    from private_questions p
      left outer join members m on p.member_id=m.member_id
      <if test="questionType != null and questionType != 'default'"> and questIon_type like #{questionType}</if>
      <if test="answerTF != null and answerTF != 'default'"> and answer_tf like #{answerTF}</if>
    order by private_question_id asc 
    limit #{offset}, #{pageSize}
  </select>
  
  <update id="stateUpdate" parameterType="PrivateBoard">
    update private_questions set 
    answer_tf = #{answerTrueFalse}
    where private_question_id=#{no}
  </update>

  <select id="countAll" resultType="int" parameterType="map">
    select count(*) from private_questions
    <where>
    <if test="questionType != null and questionType != 'default'"> and questIon_type like #{questionType}</if>
    </where>
  </select>
  
 
</mapper>